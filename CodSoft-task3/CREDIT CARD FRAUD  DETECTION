import pandas as pd
import numpy as np
import os
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report
file_path = r"c:\Users\Admin\Downloads\ml code intern\archive\fraudTrain.csv"
if not os.path.exists(file_path):
    raise FileNotFoundError(f"Error: The file '{file_path}' was not found. Check the path and try again.")
try:
    df = pd.read_csv(
        file_path, 
        nrows=10_000,  
        usecols=['amt', 'city_pop', 'merch_lat', 'merch_long', 'is_fraud'],  
        dtype={'amt': 'float32', 'city_pop': 'int32', 'merch_lat': 'float32', 'merch_long': 'float32', 'is_fraud': 'int8'}  
    )
    print("Dataset loaded successfully!")
except PermissionError:
    raise PermissionError(f"Error: Permission denied for '{file_path}'. Try running Python as Administrator or move the file.")
except Exception as e:
    raise Exception(f"Error loading file: {str(e)}")
print("\nDataset Shape:", df.shape)
print("Columns:\n", df.columns)
df.dropna(inplace=True)
X = df.drop(columns=['is_fraud'])
y = df['is_fraud']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42, stratify=y)
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)
log_reg = LogisticRegression(max_iter=2000, class_weight='balanced')
log_reg.fit(X_train, y_train)
y_pred = log_reg.predict(X_test)
print("\nLogistic Regression Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

import pandas as pd
import numpy as np
import re
import string
import nltk
from nltk.corpus import stopwords
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report
nltk.download('stopwords')
df = pd.read_csv(r"C:\Users\Admin\Downloads\ml code intern\spam.csv", encoding='latin-1')
print("Columns in dataset:", df.columns)
df = df.iloc[:, [0, 1]] 
df.columns = ['label', 'message']  

print(df.head())  
df['label'] = df['label'].map({'ham': 0, 'spam': 1})

def clean_text(text):
    text = text.lower()  
    text = re.sub(r'\d+', '', text)  
    text = text.translate(str.maketrans("", "", string.punctuation))  
    text = text.strip()  
    text = " ".join([word for word in text.split() if word not in stopwords.words('english')])  
    return text

df['message'] = df['message'].apply(clean_text)  
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(df['message'])
y = df['label']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = MultinomialNB()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
print("\n Accuracy:", accuracy_score(y_test, y_pred))
print("\n Classification Report:\n", classification_report(y_test, y_pred))
